WEBVTT

00:00.480 --> 00:05.250
Now that we have our time stamps rendering correctly to the screen we're going to go ahead and talk

00:05.250 --> 00:07.860
about a templating engine called Moustache Scott.

00:07.960 --> 00:08.510
Yes.

00:08.730 --> 00:13.500
This is going to make it much easier to define some markup and render it multiple times.

00:13.560 --> 00:18.420
In our case our messages are going to have the same set of elements in order to render it properly.

00:18.570 --> 00:21.330
We're going to have a better tag for the user's name.

00:21.330 --> 00:23.030
We're going to add the text into a paragraph.

00:23.030 --> 00:24.380
All that sort of stuff.

00:24.420 --> 00:29.580
Now instead of doing that inside an index just like we currently are we're going to create some templates

00:29.670 --> 00:34.710
some markup in index dot h DML and we're going to render those here which means we're not going to need

00:34.710 --> 00:39.960
to manually create and manipulate these elements which can be a huge burden.

00:39.980 --> 00:45.210
Now in order to get started before we actually create any templates or render them we do need to download

00:45.250 --> 00:46.320
the library.

00:46.320 --> 00:54.570
We can get this by going to google chrome and Googling mustache dot Yes and we're looking for the get

00:54.570 --> 00:57.740
hub repository which in this case happens to be the first link.

00:57.810 --> 01:00.390
You can also go to mustache dot get help.

01:00.570 --> 01:04.670
Oh and click the javascript link to get to the same location.

01:04.680 --> 01:08.660
Now once you're here we do want to grab a specific version of the library.

01:08.730 --> 01:13.380
We can go to the branch drop down and switch from branches to tags.

01:13.380 --> 01:17.460
This is going to show us all of the versions that were released the version I'm going to be using here

01:17.460 --> 01:20.910
is the most recent one to point to point one.

01:21.330 --> 01:22.590
I'm going to grab that.

01:22.620 --> 01:28.000
It's going to refresh the repository code down below and we're looking for a file called Moustache dot.

01:28.040 --> 01:33.460
J.S. This is the library file We're going to need to download and add into index.

01:33.490 --> 01:39.510
Each team out right here I can click raw to grab the raw javascript file and I can go ahead and save

01:39.510 --> 01:44.760
it into the project by right clicking and clicking save it as I'm going to go into the project on the

01:44.760 --> 01:45.380
desktop.

01:45.390 --> 01:50.550
The public J.S. libs folder and right here we're going to add the file.

01:50.780 --> 01:55.890
Now once you have the file in place we can kick things off by importing it inside of index dot HMO

01:58.500 --> 02:01.710
near the bottom we currently have script tags for Jay queery and the moment.

02:01.720 --> 02:03.420
This one is going to look pretty similar.

02:03.540 --> 02:10.670
It's going to be a script tag then we'll add that source attribute so we can load in the new file forward

02:10.670 --> 02:13.160
slash J.S. forwards slash libs.

02:13.160 --> 02:16.850
Finally it's forwards slash mustache dot J.

02:16.840 --> 02:21.240
S. Now with this in place we can go ahead and create a template and render it.

02:21.290 --> 02:24.330
This is going to give you a pretty good idea about exactly what mustache can do.

02:24.440 --> 02:30.440
And then we'll go ahead and actually wire it up with our new message and a new location message callbacks

02:31.130 --> 02:33.130
to kick things off over inside an index.

02:33.380 --> 02:37.540
You know we are going to make a new template by defining a script tag.

02:39.470 --> 02:41.690
Now inside of the script tag we're going to add our markup.

02:41.690 --> 02:45.710
But before we can do that we have to provide a couple of attributes on script.

02:45.710 --> 02:50.570
First up this is going to be a reusable template and we're going to need a way to access it so we'll

02:50.570 --> 02:52.350
give it an ID.

02:52.470 --> 02:57.930
I'm going to call this one message template and the other property we're going to define is something

02:57.930 --> 02:59.180
called the type.

02:59.250 --> 03:04.050
Now the type lets your editor and the browser know what's stored inside of the script tag.

03:04.050 --> 03:09.880
We're going to set the type equal to inside of quotes text forward slash template.

03:10.080 --> 03:14.970
Now we can write some markup inside of here and it's going to work as expected to get things off.

03:14.970 --> 03:18.060
Let's just go ahead and make a really simple paragraph takk.

03:18.090 --> 03:22.380
We're going to make a p tag inside of the script tag and we'll add some text inside of it.

03:22.380 --> 03:27.400
This is a template and you're going to go ahead and close the paragraph tag.

03:27.540 --> 03:28.140
And that is it.

03:28.230 --> 03:29.550
This is where we're going to start.

03:29.580 --> 03:35.140
We have a message template script tag we can go ahead and now render this over inside of index dot Jap's

03:35.370 --> 03:39.940
by commenting out all the code inside of the New Message listener.

03:39.980 --> 03:41.560
I'm going to comment out all of that code.

03:41.560 --> 03:43.500
Now we can implement the mustache.

03:43.510 --> 03:45.390
J.S. rendering method.

03:45.390 --> 03:50.760
First up we have to grab that template we can make a variable called template to do just this and we're

03:50.760 --> 04:00.280
going to do is select it with Jay query using the ID we just provided message hyphen template.

04:00.280 --> 04:04.990
Now we need to call the H TNL method which is going to return the markup inside of message template

04:05.170 --> 04:07.750
which is the template code or paragraph tag.

04:07.810 --> 04:14.050
In this case once we have that we can go ahead and actually call a method on moustache which was available

04:14.050 --> 04:17.160
to us because we added that script tag.

04:17.590 --> 04:20.180
Let's make a variable called H DML.

04:20.200 --> 04:24.040
This is the thing we're eventually going to add it to the browser and we're going to set it equal to

04:24.040 --> 04:28.890
a call to mustache dot render.

04:28.890 --> 04:32.420
Now mustache dot render takes the template you want to render.

04:32.490 --> 04:34.980
In this case we have access to that right here.

04:35.160 --> 04:36.240
We're going to go ahead and render it.

04:36.240 --> 04:38.440
And now we can spit it out in the browser.

04:38.550 --> 04:41.570
But adding it to the messages Id just like we do.

04:41.620 --> 04:49.550
So we're going to select the element with an ID of messages and we're going to call append and we're

04:49.550 --> 04:55.110
going to append the template we just render which we have access to inside of H DML.

04:55.160 --> 04:59.390
Now with this in place our server restarted and we can actually play around with this by refreshing

04:59.450 --> 05:00.230
the browser.

05:00.500 --> 05:02.890
I'm going to give the browser a refresh and what do we get.

05:02.980 --> 05:08.750
We got this is a template for our welcome message and if I type anything else we also get this as a

05:08.750 --> 05:12.210
template not super interesting not super useful.

05:12.320 --> 05:18.290
What is cool that was that mustache lets you inject values which means we can set up places in our template

05:18.290 --> 05:20.690
where we expect a value to get passed in.

05:20.720 --> 05:27.650
For example we have that text property in order to reference a value you can use the double curly braces

05:27.650 --> 05:29.000
syntax like this.

05:29.000 --> 05:31.930
And then you can go ahead and type the name like text.

05:31.940 --> 05:38.180
Now in order to actually provide this value we have to send in a second argument to the render method

05:38.630 --> 05:40.340
instead of just passing in the template.

05:40.430 --> 05:43.790
We're going to pass in the template and we're going to pass in an object.

05:43.790 --> 05:47.420
This object is going to have all the properties that you're going to be allowed to render.

05:47.420 --> 05:52.550
Now we're currently expecting this text property so we should probably go ahead and provide it right

05:52.550 --> 05:53.080
here.

05:53.120 --> 05:59.390
I'm going to set text equal to the value that comes back on a message dot text.

05:59.390 --> 06:02.120
Now we're rendering the template in a dynamic way.

06:02.210 --> 06:06.740
The template serves as the reusable structure but the data it's always going to change because it gets

06:06.740 --> 06:09.250
passed in when we call Brender.

06:09.260 --> 06:14.690
With this in place we can go ahead and refresh Crome and right here we see welcome to the chat app.

06:14.690 --> 06:21.870
And if I go ahead and type a message that is going to show to the screen which is fantastic.

06:21.910 --> 06:26.080
Now the next step in the process is going to be to get all the data showing we have a firm property

06:26.080 --> 06:27.910
and a created at property 2.

06:28.090 --> 06:32.650
We actually have access to that created at property the formatted time.

06:32.710 --> 06:35.830
We're going to go ahead and uncomment this formatted time line.

06:35.860 --> 06:39.310
This is the only one we're actually going to carry over to the new system.

06:39.360 --> 06:45.490
I'm going to add it up top right here because we do still want to use form at a time when we render.

06:45.490 --> 06:49.720
Now before we do anything else with the template Let's go ahead and simply pass in the values we already

06:49.720 --> 06:51.430
passed the text value in.

06:51.430 --> 06:56.000
Next up we can pass in from it's accessible via message from.

06:56.110 --> 06:58.000
And we can also pass in a time stamp.

06:58.000 --> 07:00.190
You can call that property whatever you like.

07:00.220 --> 07:06.970
I'm going to continue to call it created at and I'm going to set it equal to the formatted time up above.

07:06.970 --> 07:11.500
Now with this in place all the data is indeed getting passed in we just need to actually go ahead and

07:11.500 --> 07:13.820
use it in index.

07:14.530 --> 07:15.780
We can use all of it.

07:15.780 --> 07:21.180
And we're also going to provide a custom structure just like we did when we set up the code above.

07:21.180 --> 07:26.430
We're going to be using some classes I've defined inside of the template for this project.

07:26.530 --> 07:31.350
We're going to start off with a list item using the tag from here.

07:31.370 --> 07:38.380
We're going to go ahead and add a class and we're going to call this class message and in here we can

07:38.380 --> 07:44.140
add two divs the first div is going to be the title area where we add the From and created at values.

07:44.140 --> 07:48.100
And the second div is going to be the body of the message.

07:48.490 --> 07:54.040
Let's add one right here and we'll add a second one just below.

07:54.080 --> 08:00.890
Now for the first div we are going to provide a class the class will equal message underscore underscore

08:00.920 --> 08:04.310
title this is where the message title information is going to go.

08:04.400 --> 08:09.230
And we're going to kick things off in here by providing an H for tag which is going to render a nice

08:09.230 --> 08:15.410
header to the screen and we're going to put inside of H for is the from data which we can do by using

08:15.410 --> 08:22.130
those double curly braces and putting from right here the same exact thing holds true for span that's

08:22.130 --> 08:29.470
going to happen down below we'll add span tag and inside of the span tag we're going to inject created

08:29.480 --> 08:34.160
at adding our double curly braces and specifying the property name.

08:34.160 --> 08:38.360
Now we can go ahead and move on to the actual message body itself.

08:38.360 --> 08:43.250
That's going to happen down below inside of our second div which we will be giving a class.

08:43.250 --> 08:49.640
The second is going to have a class equal to message underscore underscore body.

08:49.850 --> 08:56.060
And for a basic message a non location based message all we're going to do is add a paragraph tag and

08:56.060 --> 09:02.540
we're going to render our text inside it by providing it to curly braces followed by text with this

09:02.540 --> 09:03.190
in place.

09:03.200 --> 09:09.260
We actually have a really great system for rendering our message template the code the markup it's defined

09:09.260 --> 09:11.640
over here which means that it's reusable.

09:11.720 --> 09:16.370
And inside an index dot J.S. we just have a little bit of code to get everything wired up.

09:16.370 --> 09:18.310
This is a much more scalable solution.

09:18.310 --> 09:25.140
It's a lot easier than managing the elements like we did down below for new location message.

09:25.190 --> 09:26.990
I'm going to go ahead and save index Dot.

09:27.020 --> 09:27.480
Yes.

09:27.560 --> 09:29.840
Move into the browser and give things a refresh.

09:29.840 --> 09:34.390
When we do we can see we now have a nice set of styles for the message.

09:34.430 --> 09:41.510
This is some the message I'm going to send that off we get the name the time stamp and the text all

09:41.540 --> 09:42.240
printing.

09:42.240 --> 09:45.160
It looks a heck of a lot better than it did earlier.

09:45.170 --> 09:48.250
Now our send location message is still going to look like trash.

09:48.350 --> 09:52.030
If I click send a location it's going to take a few seconds to get the job done.

09:52.040 --> 09:53.090
And here it is.

09:53.090 --> 09:56.150
It's an styled because it is not using a template.

09:56.270 --> 09:59.830
Well we're going to do is add a template for the new location message.

09:59.900 --> 10:03.700
We'll do some of that together and some of it is going to be a challenge for you.

10:04.520 --> 10:07.300
Together we're going to set up the markup for the template.

10:07.310 --> 10:13.350
Your job will be to render it and pass in the necessary values over inside of index.

10:13.520 --> 10:17.240
HTL we can get started doing this by creating a second template.

10:17.450 --> 10:20.400
Now the second template is going to be pretty similar to the first.

10:20.480 --> 10:25.150
We can actually go ahead and duplicate this template by copying and pasting it down below.

10:25.250 --> 10:31.740
All we need to do is change the ID from message template to location message template.

10:32.090 --> 10:36.800
Now the title area is going to be the same we're going to have our Froment property as well as created

10:36.860 --> 10:42.590
at it's the body that's going to change instead of rendering a paragraph with the text we're going to

10:42.590 --> 10:46.350
render a paragraph that has the link using an anchor tag.

10:46.550 --> 10:51.570
Now to add that anchor tag we're going to add the a tag just like this.

10:51.610 --> 10:55.180
Then inside of the ATF attribute we're going to be injecting the value.

10:55.180 --> 10:59.390
This is going to be the you R-AL that gets passed from server to client.

10:59.410 --> 11:05.250
We're going to add our equal signs are curly braces and the value we want to add here is you are l.

11:05.470 --> 11:11.530
Next up we are going to carry over that target property sending an equal to blank underscore blank which

11:11.530 --> 11:13.240
will open up the link in a new tab.

11:13.240 --> 11:19.620
And finally we can go ahead and close the anchor tag adding the text for the link inside.

11:19.870 --> 11:22.460
Good text for this link would be my current location.

11:22.510 --> 11:27.970
Just like we have right now and this is all we need to do for the template you're part of the challenge

11:27.970 --> 11:35.110
is going to be to wire up all of this inside of index dot J.S. which means down here inside of new location

11:35.110 --> 11:38.170
message you want to do something pretty similar to what we have above.

11:38.380 --> 11:42.940
Instead of rendering everything with J queries you're going to render the template passing in the necessary

11:42.940 --> 11:47.490
data text you R-AL and the formatted time stamp.

11:47.710 --> 11:49.730
Take a moment to knock this out.

11:49.840 --> 11:54.010
When you're done I want you to go ahead and move into the browser send some location messages and make

11:54.010 --> 11:58.450
sure it looks like it should styled where the name is in bold.

11:58.450 --> 12:02.900
The time stamp is in a light gray and the link shows up down below.

12:02.920 --> 12:09.930
Once you're done and everything is working you can go ahead and click play.

12:09.940 --> 12:13.560
All right the first thing we're going to do is comment out the code.

12:13.570 --> 12:18.490
We no longer need that's everything but the variable formatted time.

12:18.490 --> 12:24.190
Next up we're going to go ahead and grab the template from the HD now by making a variable called template

12:24.670 --> 12:29.770
and we're going to use J query to select it by ID right inside of the quotes we'll add our selector.

12:29.770 --> 12:36.580
We want to select by ID so we'll add that pound sign location hyphen message hyphen template is the

12:36.580 --> 12:42.270
IDB provided and now we want to go ahead and call each team to get its inner TNL back.

12:42.280 --> 12:45.340
This is everything I have highlighted right here.

12:45.340 --> 12:50.560
Next up we're going to go ahead and actually render the template by creating a variable called H TNL

12:50.560 --> 12:52.230
to store the return value.

12:52.330 --> 12:55.590
And we're going to call mustache dot render.

12:55.780 --> 12:57.100
This takes those two arguments.

12:57.100 --> 13:00.980
The template you want to render and the data you want to render into that template.

13:01.030 --> 13:04.530
Now the data is optional but we do indeed need to pass some data through.

13:04.600 --> 13:08.310
So we will be providing that as well template is our first argument.

13:08.440 --> 13:10.790
And the second one is going to be an object.

13:10.930 --> 13:16.720
I'm going to start by setting from equal to message from and we can do the same thing with the u r l

13:16.930 --> 13:21.150
u r l equals a message dot A u r l for created at.

13:21.160 --> 13:27.730
We're going to use the form at a time variable instead created at get set equal to formatted time which

13:27.730 --> 13:29.530
is defined just above.

13:29.560 --> 13:35.050
Now that we have access to the HVM we need to render we can use a J query selector to select the element

13:35.230 --> 13:40.690
with an idea of messages and we're going to call it pend to add a new message the new message we want

13:40.690 --> 13:44.250
to add is available via the T.M. variable.

13:44.320 --> 13:49.670
Now that we have our function completely converted over we can remove the old commented out code.

13:49.750 --> 13:53.530
Save the file and test things out over inside of chrome.

13:53.530 --> 13:56.440
I'm going to give the page to refresh to load that latest code.

13:56.440 --> 13:58.790
I'll send a text message to make sure that still works.

13:58.810 --> 14:02.230
Now we can go ahead and send a location message.

14:02.290 --> 14:07.090
We should see in just a second the new data rendering and it is indeed working as expected.

14:07.090 --> 14:09.610
We have the name the time stamp and the link.

14:09.610 --> 14:12.740
I can go ahead and click the link to make sure it is still working.

14:12.820 --> 14:16.030
And it is the little marker shows up right here.

14:16.030 --> 14:21.760
With this in place we now have a much better set up for creating these front end templates instead of

14:21.760 --> 14:24.550
having to do the heavy lifting inside of index.

14:24.640 --> 14:27.730
Yes we can do the template inside of index.

14:27.750 --> 14:28.620
H t m l.

14:28.660 --> 14:30.130
Simply passing the data in.

14:30.210 --> 14:32.750
It's a much more scalable solution.

14:32.950 --> 14:36.580
Now that we have this in place we are done and we can go ahead and commit our changes by shutting down

14:36.580 --> 14:38.910
the server and running get status.

14:38.920 --> 14:44.110
Here we have a new file as well as a couple of modified ones get add dot is going to take care of all

14:44.110 --> 14:49.790
of that for us and we can make our commit get commit with the a flag.

14:49.870 --> 14:59.680
Actually we already added it so we can just use the M flag and mustache J us for message templates.

14:59.690 --> 15:00.590
Excellent.

15:00.620 --> 15:05.650
I'm going to push this up to get hub and we can go ahead and take a quick moment to deploy to Heroku

15:05.680 --> 15:09.110
to use and get push Heroku master.

15:09.440 --> 15:13.910
I'm going to push this up just to make sure all the templates are rendering properly on Heroku just

15:13.970 --> 15:15.400
like they are locally.

15:15.560 --> 15:18.610
It should take just a second to deploy once it's up.

15:18.620 --> 15:24.260
We can open it up by either running Heroku open or grabbing that u r l as we've done before here it's

15:24.260 --> 15:27.230
launching the app it looks like everything and did go as expected.

15:27.350 --> 15:28.240
I'm going to grab the app.

15:28.250 --> 15:30.940
You are all move into chrome and open it up.

15:31.520 --> 15:34.630
And now we're doing the application live inside of Heroku.

15:34.640 --> 15:37.940
And the message data is showing up as expected.

15:37.940 --> 15:43.250
The same thing should hold true for sending the location the send location message should use the new

15:43.250 --> 15:43.880
setup.

15:43.880 --> 15:49.180
It is indeed working as expected which is fan tactic.

15:49.190 --> 15:50.170
That's it for this one.

15:50.180 --> 15:51.620
I will see you next time
