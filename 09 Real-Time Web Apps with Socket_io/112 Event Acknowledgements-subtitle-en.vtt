WEBVTT

00:00.530 --> 00:03.700
In this video you're going to learn how to use event acknowledgements.

00:03.710 --> 00:06.780
They are a fantastic feature inside of socket.

00:06.800 --> 00:11.510
I know in order to illustrate exactly what they are and why you'd ever want to use them we're going

00:11.510 --> 00:14.070
to quickly run through the slides for the chat app.

00:14.090 --> 00:18.680
These are the two events that we actually have in our application if you remember the first one is the

00:18.680 --> 00:19.810
new message event.

00:19.880 --> 00:25.640
It gets emitted by the server and it gets listened to by the client it sends across the from text and

00:25.640 --> 00:30.640
created out properties all of which are required to render the message to the screen.

00:30.650 --> 00:34.370
Now the event that we're going to be updating is the create message event.

00:34.370 --> 00:38.690
This one gets emitted by the client and listened to by the server.

00:38.690 --> 00:42.310
Once again we are sending some data across from and text.

00:42.320 --> 00:46.290
Now the problem with our create message event is that the data flows in one direction.

00:46.340 --> 00:48.780
The data comes from a form inside of the browser.

00:48.860 --> 00:52.320
It then gets sent over to the server and the server is kind of stuck.

00:52.340 --> 00:57.830
Sure the data might be valid the From and text fields might be correctly set up and that case we can

00:57.830 --> 01:01.870
emit a new message event rendering it to every browser who's connected to the server.

01:01.910 --> 01:07.670
But if the server receives invalid data it has no way to let the client know that something went wrong.

01:07.790 --> 01:13.220
What we need is a way to acknowledge we got a request and have the option to send some data back.

01:13.340 --> 01:19.160
In this case we're going to added acknowledgment for create message if the client emits a valid request

01:19.160 --> 01:21.170
with valid from and text properties.

01:21.170 --> 01:26.900
We're going to acknowledge that sending back no error message if the data sent from client to server

01:26.900 --> 01:27.610
is invalid.

01:27.610 --> 01:32.000
We're going to acknowledge it's sending back the errors so the client knows exactly what it needs to

01:32.000 --> 01:34.640
do to send a valid request.

01:34.640 --> 01:36.990
Now the result is going to look a little bit like this.

01:37.100 --> 01:41.160
And the data flow from server to client is going to be done via a callback.

01:41.270 --> 01:43.410
Your knowledge could be anything you like.

01:43.460 --> 01:46.340
In our case it could be was the message data valid.

01:46.400 --> 01:51.650
If you're creating an email application you might only send the acknowledgment back to the client when

01:51.650 --> 01:53.890
the email was successfully sent.

01:53.900 --> 01:58.130
You don't need to send data which is what we're going to do when valid data is sent across the pipeline

01:58.130 --> 02:00.040
we're simply going to say hey we got that message.

02:00.050 --> 02:04.530
Everything's got to go and the client can respond to that.

02:04.580 --> 02:10.670
Now that we've gone through this let's go ahead and implemented into our application setting up acknowledgements

02:10.670 --> 02:14.080
really isn't that bad if you already have a listener in place.

02:14.090 --> 02:19.040
All you have to do is make a quick change to the listener and a quick change to the emitter and everything

02:19.040 --> 02:20.480
will work as expected.

02:20.480 --> 02:24.890
Now in this case the listener happens to be on the server and the emitter is going to be on the client

02:25.070 --> 02:27.590
but acknowledgements also work in the other direction.

02:27.650 --> 02:33.190
I can emit and event from the server and I can acknowledge it from the client in order to set this up

02:33.200 --> 02:36.960
we are going to emit a create message event over inside of index.

02:37.070 --> 02:37.730
Yes.

02:38.000 --> 02:39.520
Using socket dowdy.

02:39.980 --> 02:42.770
And we're going to pass in the same arguments we would otherwise.

02:42.770 --> 02:44.300
The first one is the event name.

02:44.300 --> 02:49.610
Create message and we're going to pass in some valid data in object with those two properties.

02:49.700 --> 02:55.520
We can set from equal to something like Frank and we can set a text property equal to something like

02:55.660 --> 02:56.480
high.

02:56.480 --> 03:02.320
Now with this in place we have a standard event emitter and a standard event listener.

03:02.480 --> 03:07.620
I can go ahead and start up the app using gnomon and we can make sure everything's working as expected.

03:07.710 --> 03:09.310
Gnomon server server.

03:09.430 --> 03:10.320
Yes.

03:10.550 --> 03:13.860
Once the server is up we can visit it in the browser.

03:14.030 --> 03:16.230
I'm going to open up the developer tools as well.

03:18.590 --> 03:21.190
Then we're going to go to localhost three thousand

03:25.050 --> 03:28.740
and you can see over inside of the terminal we have create message showing up.

03:28.830 --> 03:31.170
And we also have new message showing up here.

03:31.260 --> 03:34.350
We have the new message for our little Welcome to the chat app greeting.

03:34.350 --> 03:39.690
And we have the new message from Frank which we admitted now the goal here is to send an acknowledgement

03:39.690 --> 03:44.430
from the server back to the client that we got the data in order to get this done and we have to make

03:44.430 --> 03:47.330
a change to both the listener and the emitter.

03:47.370 --> 03:51.570
If you only make a change to one it is not going to work as expected.

03:51.720 --> 03:54.380
We're going to start with the event emitter.

03:54.510 --> 03:59.820
We want a way to run some code when the acknowledgement has been sent from the server back to the client

04:00.090 --> 04:01.280
in order to get that done.

04:01.290 --> 04:05.050
We're going to add a third argument which is going to be a callback function.

04:05.070 --> 04:09.540
This function is going to fire when the acknowledgment arrives at the client and we can do anything

04:09.540 --> 04:10.090
we like.

04:10.140 --> 04:13.130
For now we'll just print using console that log.

04:13.140 --> 04:13.790
Got it.

04:15.460 --> 04:16.950
Now this is all we need to do.

04:16.960 --> 04:23.170
Bare bones style to add an acknowledgment to the client on the server it's also pretty simple.

04:23.200 --> 04:28.120
We're going to add a second argument to our callback argument list the first one is still going to be

04:28.120 --> 04:29.410
the data that was emitted.

04:29.440 --> 04:33.970
The second one though is going to be a function that we're going to refer to as callback and we can

04:33.970 --> 04:39.850
call it anywhere down below to acknowledge that we got that request when we call this function like

04:39.850 --> 04:45.040
we're going to call it right here it is in turn going to send an event back to the front end.

04:45.130 --> 04:48.770
And it is going to call the function as we have it here.

04:48.790 --> 04:53.560
This means that if I save both files we can play around with acknowledgements over in the browser.

04:53.560 --> 04:56.130
I'm going to refresh the app.

04:56.350 --> 04:57.760
And what do we get we get.

04:57.760 --> 04:58.450
Got it.

04:58.450 --> 05:01.110
That means our data successfully went to the server.

05:01.120 --> 05:04.210
We can prove that by seeing the console log statement here.

05:04.210 --> 05:07.230
The server acknowledged it got the data by calling callback.

05:07.360 --> 05:08.200
And right here.

05:08.230 --> 05:09.740
Got it prints.

05:09.850 --> 05:15.250
Now acknowledgements are pretty useful but they're even more useful when you send data back if the data

05:15.250 --> 05:16.390
for the message is invalid.

05:16.390 --> 05:20.380
For example we're probably going to want to send some errors back something we will be doing a little

05:20.380 --> 05:21.030
later.

05:21.040 --> 05:25.790
For now though we can play around with an acknowledgment by sending anything we want back.

05:25.990 --> 05:29.680
We send data back by providing one argument to callback.

05:29.710 --> 05:32.980
If you want to add multiple things simply specify an object.

05:32.980 --> 05:34.860
Adding as many properties as you like.

05:34.960 --> 05:39.840
In our case though we can send as the only argument to call back a string.

05:39.940 --> 05:41.170
I'm going to set my string too.

05:41.170 --> 05:44.820
This is from the server.

05:44.860 --> 05:49.990
This string is going to be passed into the callback and it's going to end up inside of our callback

05:50.110 --> 05:55.780
right here which means I can create a variable for that value we can call it data or anything else you

05:55.780 --> 05:59.440
like and we can print it to the screen or do something with it.

05:59.440 --> 06:02.230
For now we're just going to print it to the screen.

06:02.230 --> 06:04.740
If I save index dot J.S. we can test that.

06:04.750 --> 06:06.790
Everything is working as expected.

06:06.790 --> 06:10.150
I'm going to go ahead and give the app a refresh and what do we see we see.

06:10.150 --> 06:10.740
Got it.

06:10.780 --> 06:16.360
Meaning we got the acknowledgement and we see the data the data that was sent from the server to the

06:16.360 --> 06:20.620
client acknowledgements play an important role in realtime applications.

06:20.620 --> 06:26.230
Let's go back to that e-mail app example for a second imagine I type in some values like a to value

06:26.230 --> 06:28.460
and a text value when I send the e-mail.

06:28.540 --> 06:34.540
I want to get an acknowledgment back that either A the email sent successfully or B the e-mail did not

06:34.600 --> 06:37.050
send successfully in which case I want to know why.

06:37.210 --> 06:43.120
Maybe it was a form error where I can show some error messages to the user or maybe the server was down

06:43.120 --> 06:45.040
for maintenance or something like that.

06:45.100 --> 06:52.230
Either way acknowledgements allow the request listener to send something back to the request emitter.

06:52.270 --> 06:56.470
Now that we know how to use acknowledgements we're going to integrate them into our application that

06:56.470 --> 07:02.180
is coming up in the next video as we add an actual form field to our index.

07:02.240 --> 07:06.540
H file where users can submit new messages and view them.

07:06.580 --> 07:07.840
It's all coming up next.

07:07.840 --> 07:08.700
Stay tuned.

07:08.740 --> 07:10.580
I will see you then.
